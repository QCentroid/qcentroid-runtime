name: Python package


on:
  pull_request:
  push:  

jobs:
  build:

    runs-on: ${{ vars.DEFAULT_RUNNER || 'ubuntu-latest' }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    env:
      PYTHON_VERSION: 3.9
      FOLDER: ./qcentroid_runtime_qiskit
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies ${{ matrix.python-version }}        
        run: |
          python -m pip install .[test] --upgrade pip
          pip install ruff pytest pytest-codecov
          if [ -f pyproject.toml ]; then pip install . ; fi
      - name: Lint with ruff ${{ matrix.python-version }}
        working-directory: ${{ env.FOLDER }}
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff check --output-format=github --select=E9,F63,F7,F82 --target-version=py39 .
          # default set of ruff rules with GitHub Annotations
          #ruff check --format=github --target-version=py37 .
      - name: Test with pytest  ${{ matrix.python-version }}        
        run: |
          if pytest --cov-report term-missing --cov-report xml --cov qcentroid_runtime_qiskit; then
            echo "Tests passed in $folder"
          else
            exit_code=$?
            if [ $exit_code -eq 5 ]; then
              echo "::warning:: No tests found in $folder (warning)"
            else
              echo "::error:: Tests failed in $folder (error)"
              exit 1
            fi
          fi
      - name: Code Coverage Report
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: QCentroid/qcentroid-runtime-qiskit
